import ctypes

class VkPhysicalDeviceFeatures(ctypes.Structure):
    _fields_ = [
        ('robustBufferAccess', ctypes.c_uint32),
        ('fullDrawIndexUint32', ctypes.c_uint32),
        ('imageCubeArray', ctypes.c_uint32),
        ('independentBlend', ctypes.c_uint32),
        ('geometryShader', ctypes.c_uint32),
        ('tessellationShader', ctypes.c_uint32),
        ('sampleRateShading', ctypes.c_uint32),
        ('dualSrcBlend', ctypes.c_uint32),
        ('logicOp', ctypes.c_uint32),
        ('multiDrawIndirect', ctypes.c_uint32),
        ('drawIndirectFirstInstance', ctypes.c_uint32),
        ('depthClamp', ctypes.c_uint32),
        ('depthBiasClamp', ctypes.c_uint32),
        ('fillModeNonSolid', ctypes.c_uint32),
        ('depthBounds', ctypes.c_uint32),
        ('wideLines', ctypes.c_uint32),
        ('largePoints', ctypes.c_uint32),
        ('alphaToOne', ctypes.c_uint32),
        ('multiViewport', ctypes.c_uint32),
        ('samplerAnisotropy', ctypes.c_uint32),
        ('textureCompressionETC2', ctypes.c_uint32),
        ('textureCompressionASTC_LDR', ctypes.c_uint32),
        ('textureCompressionBC', ctypes.c_uint32),
        ('occlusionQueryPrecise', ctypes.c_uint32),
        ('pipelineStatisticsQuery', ctypes.c_uint32),
        ('vertexPipelineStoresAndAtomics', ctypes.c_uint32),
        ('fragmentStoresAndAtomics', ctypes.c_uint32),
        ('shaderTessellationAndGeometryPointSize', ctypes.c_uint32),
        ('shaderImageGatherExtended', ctypes.c_uint32),
        ('shaderStorageImageExtendedFormats', ctypes.c_uint32),
        ('shaderStorageImageMultisample', ctypes.c_uint32),
        ('shaderStorageImageReadWithoutFormat', ctypes.c_uint32),
        ('shaderStorageImageWriteWithoutFormat', ctypes.c_uint32),
        ('shaderUniformBufferArrayDynamicIndexing', ctypes.c_uint32),
        ('shaderSampledImageArrayDynamicIndexing', ctypes.c_uint32),
        ('shaderStorageBufferArrayDynamicIndexing', ctypes.c_uint32),
        ('shaderStorageImageArrayDynamicIndexing', ctypes.c_uint32),
        ('shaderClipDistance', ctypes.c_uint32),
        ('shaderCullDistance', ctypes.c_uint32),
        ('shaderFloat64', ctypes.c_uint32),
        ('shaderInt64', ctypes.c_uint32),
        ('shaderInt16', ctypes.c_uint32),
        ('shaderResourceResidency', ctypes.c_uint32),
        ('shaderResourceMinLod', ctypes.c_uint32),
        ('sparseBinding', ctypes.c_uint32),
        ('sparseResidencyBuffer', ctypes.c_uint32),
        ('sparseResidencyImage2D', ctypes.c_uint32),
        ('sparseResidencyImage3D', ctypes.c_uint32),
        ('sparseResidency2Samples', ctypes.c_uint32),
        ('sparseResidency4Samples', ctypes.c_uint32),
        ('sparseResidency8Samples', ctypes.c_uint32),
        ('sparseResidency16Samples', ctypes.c_uint32),
        ('sparseResidencyAliased', ctypes.c_uint32),
        ('variableMultisampleRate', ctypes.c_uint32),
        ('inheritedQueries', ctypes.c_uint32),
    ]

    _init_ = []
    _extends_ = set()
    _extended_by_ = set()
    _includes_ = set()
    _included_in_ = {
        'VkDeviceCreateInfo',
        'VkPhysicalDeviceFeatures2',
    }
    _input_of_ = set()
    _output_of_ = {
        'vkGetPhysicalDeviceFeatures',
    }
    _python_name_ = {
        'robustBufferAccess': 'robust_buffer_access',
        'fullDrawIndexUint32': 'full_draw_index_uint32',
        'imageCubeArray': 'image_cube_array',
        'independentBlend': 'independent_blend',
        'geometryShader': 'geometry_shader',
        'tessellationShader': 'tessellation_shader',
        'sampleRateShading': 'sample_rate_shading',
        'dualSrcBlend': 'dual_src_blend',
        'logicOp': 'logic_op',
        'multiDrawIndirect': 'multi_draw_indirect',
        'drawIndirectFirstInstance': 'draw_indirect_first_instance',
        'depthClamp': 'depth_clamp',
        'depthBiasClamp': 'depth_bias_clamp',
        'fillModeNonSolid': 'fill_mode_non_solid',
        'depthBounds': 'depth_bounds',
        'wideLines': 'wide_lines',
        'largePoints': 'large_points',
        'alphaToOne': 'alpha_to_one',
        'multiViewport': 'multi_viewport',
        'samplerAnisotropy': 'sampler_anisotropy',
        'textureCompressionETC2': 'texture_compression_etc2',
        'textureCompressionASTC_LDR': 'texture_compression_astc_ldr',
        'textureCompressionBC': 'texture_compression_bc',
        'occlusionQueryPrecise': 'occlusion_query_precise',
        'pipelineStatisticsQuery': 'pipeline_statistics_query',
        'vertexPipelineStoresAndAtomics': 'vertex_pipeline_stores_and_atomics',
        'fragmentStoresAndAtomics': 'fragment_stores_and_atomics',
        'shaderTessellationAndGeometryPointSize': 'shader_tessellation_and_geometry_point_size',
        'shaderImageGatherExtended': 'shader_image_gather_extended',
        'shaderStorageImageExtendedFormats': 'shader_storage_image_extended_formats',
        'shaderStorageImageMultisample': 'shader_storage_image_multisample',
        'shaderStorageImageReadWithoutFormat': 'shader_storage_image_read_without_format',
        'shaderStorageImageWriteWithoutFormat': 'shader_storage_image_write_without_format',
        'shaderUniformBufferArrayDynamicIndexing': 'shader_uniform_buffer_array_dynamic_indexing',
        'shaderSampledImageArrayDynamicIndexing': 'shader_sampled_image_array_dynamic_indexing',
        'shaderStorageBufferArrayDynamicIndexing': 'shader_storage_buffer_array_dynamic_indexing',
        'shaderStorageImageArrayDynamicIndexing': 'shader_storage_image_array_dynamic_indexing',
        'shaderClipDistance': 'shader_clip_distance',
        'shaderCullDistance': 'shader_cull_distance',
        'shaderFloat64': 'shader_float64',
        'shaderInt64': 'shader_int64',
        'shaderInt16': 'shader_int16',
        'shaderResourceResidency': 'shader_resource_residency',
        'shaderResourceMinLod': 'shader_resource_min_lod',
        'sparseBinding': 'sparse_binding',
        'sparseResidencyBuffer': 'sparse_residency_buffer',
        'sparseResidencyImage2D': 'sparse_residency_image2_d',
        'sparseResidencyImage3D': 'sparse_residency_image3_d',
        'sparseResidency2Samples': 'sparse_residency2_samples',
        'sparseResidency4Samples': 'sparse_residency4_samples',
        'sparseResidency8Samples': 'sparse_residency8_samples',
        'sparseResidency16Samples': 'sparse_residency16_samples',
        'sparseResidencyAliased': 'sparse_residency_aliased',
        'variableMultisampleRate': 'variable_multisample_rate',
        'inheritedQueries': 'inherited_queries',
    }
    _vk_versions_ = {
        (1, 0),
    }
    _vk_extensions_ = set()
    _vk_enum_ = dict()

    def __init__(self, *args, **kwargs):
        super().__init__()
        for function in self._init_:
            function(self, *args, **kwargs)

VkPhysicalDeviceFeatures._type_ = {
    'robustBufferAccess': ctypes.c_uint32,
    'fullDrawIndexUint32': ctypes.c_uint32,
    'imageCubeArray': ctypes.c_uint32,
    'independentBlend': ctypes.c_uint32,
    'geometryShader': ctypes.c_uint32,
    'tessellationShader': ctypes.c_uint32,
    'sampleRateShading': ctypes.c_uint32,
    'dualSrcBlend': ctypes.c_uint32,
    'logicOp': ctypes.c_uint32,
    'multiDrawIndirect': ctypes.c_uint32,
    'drawIndirectFirstInstance': ctypes.c_uint32,
    'depthClamp': ctypes.c_uint32,
    'depthBiasClamp': ctypes.c_uint32,
    'fillModeNonSolid': ctypes.c_uint32,
    'depthBounds': ctypes.c_uint32,
    'wideLines': ctypes.c_uint32,
    'largePoints': ctypes.c_uint32,
    'alphaToOne': ctypes.c_uint32,
    'multiViewport': ctypes.c_uint32,
    'samplerAnisotropy': ctypes.c_uint32,
    'textureCompressionETC2': ctypes.c_uint32,
    'textureCompressionASTC_LDR': ctypes.c_uint32,
    'textureCompressionBC': ctypes.c_uint32,
    'occlusionQueryPrecise': ctypes.c_uint32,
    'pipelineStatisticsQuery': ctypes.c_uint32,
    'vertexPipelineStoresAndAtomics': ctypes.c_uint32,
    'fragmentStoresAndAtomics': ctypes.c_uint32,
    'shaderTessellationAndGeometryPointSize': ctypes.c_uint32,
    'shaderImageGatherExtended': ctypes.c_uint32,
    'shaderStorageImageExtendedFormats': ctypes.c_uint32,
    'shaderStorageImageMultisample': ctypes.c_uint32,
    'shaderStorageImageReadWithoutFormat': ctypes.c_uint32,
    'shaderStorageImageWriteWithoutFormat': ctypes.c_uint32,
    'shaderUniformBufferArrayDynamicIndexing': ctypes.c_uint32,
    'shaderSampledImageArrayDynamicIndexing': ctypes.c_uint32,
    'shaderStorageBufferArrayDynamicIndexing': ctypes.c_uint32,
    'shaderStorageImageArrayDynamicIndexing': ctypes.c_uint32,
    'shaderClipDistance': ctypes.c_uint32,
    'shaderCullDistance': ctypes.c_uint32,
    'shaderFloat64': ctypes.c_uint32,
    'shaderInt64': ctypes.c_uint32,
    'shaderInt16': ctypes.c_uint32,
    'shaderResourceResidency': ctypes.c_uint32,
    'shaderResourceMinLod': ctypes.c_uint32,
    'sparseBinding': ctypes.c_uint32,
    'sparseResidencyBuffer': ctypes.c_uint32,
    'sparseResidencyImage2D': ctypes.c_uint32,
    'sparseResidencyImage3D': ctypes.c_uint32,
    'sparseResidency2Samples': ctypes.c_uint32,
    'sparseResidency4Samples': ctypes.c_uint32,
    'sparseResidency8Samples': ctypes.c_uint32,
    'sparseResidency16Samples': ctypes.c_uint32,
    'sparseResidencyAliased': ctypes.c_uint32,
    'variableMultisampleRate': ctypes.c_uint32,
    'inheritedQueries': ctypes.c_uint32,
}
