import ctypes

class CType(ctypes.Structure):
    _fields_ = [
        ('error_resilient_mode', ctypes.c_uint32, 1),
        ('disable_cdf_update', ctypes.c_uint32, 1),
        ('use_superres', ctypes.c_uint32, 1),
        ('render_and_frame_size_different', ctypes.c_uint32, 1),
        ('allow_screen_content_tools', ctypes.c_uint32, 1),
        ('is_filter_switchable', ctypes.c_uint32, 1),
        ('force_integer_mv', ctypes.c_uint32, 1),
        ('frame_size_override_flag', ctypes.c_uint32, 1),
        ('buffer_removal_time_present_flag', ctypes.c_uint32, 1),
        ('allow_intrabc', ctypes.c_uint32, 1),
        ('frame_refs_short_signaling', ctypes.c_uint32, 1),
        ('allow_high_precision_mv', ctypes.c_uint32, 1),
        ('is_motion_mode_switchable', ctypes.c_uint32, 1),
        ('use_ref_frame_mvs', ctypes.c_uint32, 1),
        ('disable_frame_end_update_cdf', ctypes.c_uint32, 1),
        ('allow_warped_motion', ctypes.c_uint32, 1),
        ('reduced_tx_set', ctypes.c_uint32, 1),
        ('reference_select', ctypes.c_uint32, 1),
        ('skip_mode_present', ctypes.c_uint32, 1),
        ('delta_q_present', ctypes.c_uint32, 1),
        ('delta_lf_present', ctypes.c_uint32, 1),
        ('delta_lf_multi', ctypes.c_uint32, 1),
        ('segmentation_enabled', ctypes.c_uint32, 1),
        ('segmentation_update_map', ctypes.c_uint32, 1),
        ('segmentation_temporal_update', ctypes.c_uint32, 1),
        ('segmentation_update_data', ctypes.c_uint32, 1),
        ('UsesLr', ctypes.c_uint32, 1),
        ('usesChromaLr', ctypes.c_uint32, 1),
        ('apply_grain', ctypes.c_uint32, 1),
        ('reserved', ctypes.c_uint32, 3),
    ]

descriptor = {
    'extends': set(),
    'extended_by': set(),
    'includes': set(),
    'included_in': {
        'StdVideoDecodeAV1PictureInfo',
    },
    'input_of': set(),
    'output_of': set(),
    'member_map': {
        'error_resilient_mode': {'python_name': ['error', 'resilient', 'mode']},
        'disable_cdf_update': {'python_name': ['disable', 'cdf', 'update']},
        'use_superres': {'python_name': ['use', 'superres']},
        'render_and_frame_size_different': {'python_name': ['render', 'and', 'frame', 'size', 'different']},
        'allow_screen_content_tools': {'python_name': ['allow', 'screen', 'content', 'tools']},
        'is_filter_switchable': {'python_name': ['is', 'filter', 'switchable']},
        'force_integer_mv': {'python_name': ['force', 'integer', 'mv']},
        'frame_size_override_flag': {'python_name': ['frame', 'size', 'override', 'flag']},
        'buffer_removal_time_present_flag': {'python_name': ['buffer', 'removal', 'time', 'present', 'flag']},
        'allow_intrabc': {'python_name': ['allow', 'intrabc']},
        'frame_refs_short_signaling': {'python_name': ['frame', 'refs', 'short', 'signaling']},
        'allow_high_precision_mv': {'python_name': ['allow', 'high', 'precision', 'mv']},
        'is_motion_mode_switchable': {'python_name': ['is', 'motion', 'mode', 'switchable']},
        'use_ref_frame_mvs': {'python_name': ['use', 'ref', 'frame', 'mvs']},
        'disable_frame_end_update_cdf': {'python_name': ['disable', 'frame', 'end', 'update', 'cdf']},
        'allow_warped_motion': {'python_name': ['allow', 'warped', 'motion']},
        'reduced_tx_set': {'python_name': ['reduced', 'tx', 'set']},
        'reference_select': {'python_name': ['reference', 'select']},
        'skip_mode_present': {'python_name': ['skip', 'mode', 'present']},
        'delta_q_present': {'python_name': ['delta', 'q', 'present']},
        'delta_lf_present': {'python_name': ['delta', 'lf', 'present']},
        'delta_lf_multi': {'python_name': ['delta', 'lf', 'multi']},
        'segmentation_enabled': {'python_name': ['segmentation', 'enabled']},
        'segmentation_update_map': {'python_name': ['segmentation', 'update', 'map']},
        'segmentation_temporal_update': {'python_name': ['segmentation', 'temporal', 'update']},
        'segmentation_update_data': {'python_name': ['segmentation', 'update', 'data']},
        'UsesLr': {'python_name': ['uses', 'lr']},
        'usesChromaLr': {'python_name': ['uses', 'chroma', 'lr']},
        'apply_grain': {'python_name': ['apply', 'grain']},
        'reserved': {'python_name': ['reserved']},
    }
}
